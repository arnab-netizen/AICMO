name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
jobs:
  unit-minimal:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install capsule-core (editable)
        run: |
          python -m pip install --upgrade pip
          pip install -e ./capsule-core

      - name: Import check
        run: |
          python -c "from capsule_core.run import RunRequest; print(RunRequest(project_id='ok', payload={}))"

      - name: Install deps (backend + minimal worker deps)
        run: |
          python -m pip install --upgrade pip
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
          if [ -f workers/requirements.txt ]; then pip install -r workers/requirements.txt; fi
          pip install pytest

      - name: Guard against legacy core imports
        run: |
          # Fail if any in-tree legacy `core.*` imports exist (allow edits to capsule-core)
          ! grep -RInE "\b(from|import)\s+core\.(run|metrics|utils)\b" \
            --exclude-dir=.venv --exclude-dir=node_modules --exclude-dir=capsule-core .

      - name: Run minimal tests
        run: make minimal-test

      - name: Run SiteGen tests
        run: |
          PYTHONPATH=. pytest -q backend/tests/test_sitegen_contract.py backend/tests/test_sitegen_auth.py

  # unit-full:
  #   runs-on: ubuntu-latest
  #   needs: unit-minimal
  #   timeout-minutes: 15
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.12'
  #     - uses: actions/cache@v4
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-
  #     - name: Install deps
  #       run: |
  #         python -m pip install --upgrade pip
  #         if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
  #         pip install pytest
  #     - name: Run full backend tests
  #       env:
  #         PYTHONPATH: .
  #       run: make full-test
      #   run: black --check backend
